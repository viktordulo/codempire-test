[{"D:\\JS_study\\calculator-ios\\src\\index.tsx":"1","D:\\JS_study\\calculator-ios\\src\\App.tsx":"2","D:\\JS_study\\calculator-ios\\src\\components\\SlideBar.tsx":"3","D:\\JS_study\\calculator-ios\\src\\components\\InputField.tsx":"4","D:\\JS_study\\calculator-ios\\src\\components\\ButtonDouble.tsx":"5","D:\\JS_study\\calculator-ios\\src\\components\\ButtonStandard.tsx":"6","D:\\JS_study\\calculator-ios\\src\\components\\ButtonsArea.tsx":"7","D:\\JS_study\\calculator-ios\\src\\redux\\Store.ts":"8","D:\\JS_study\\calculator-ios\\src\\redux\\InputReducer.ts":"9","D:\\JS_study\\calculator-ios\\src\\redux\\ButtonsReducer.ts":"10","D:\\JS_study\\calculator-ios\\src\\redux\\store.ts":"11"},{"size":525,"mtime":1612023467357,"results":"12","hashOfConfig":"13"},{"size":383,"mtime":1612023445060,"results":"14","hashOfConfig":"13"},{"size":538,"mtime":1611833697005,"results":"15","hashOfConfig":"13"},{"size":407,"mtime":1612023416244,"results":"16","hashOfConfig":"13"},{"size":656,"mtime":1612004724509,"results":"17","hashOfConfig":"13"},{"size":896,"mtime":1612004742288,"results":"18","hashOfConfig":"13"},{"size":1775,"mtime":1612095021880,"results":"19","hashOfConfig":"13"},{"size":310,"mtime":1611940357067,"results":"20","hashOfConfig":"13"},{"size":7312,"mtime":1612103766389,"results":"21","hashOfConfig":"13"},{"size":219,"mtime":1612023316560,"results":"22","hashOfConfig":"13"},{"size":310,"mtime":1611952689265,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"x84f87",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\JS_study\\calculator-ios\\src\\index.tsx",[],["48","49"],"D:\\JS_study\\calculator-ios\\src\\App.tsx",[],"D:\\JS_study\\calculator-ios\\src\\components\\SlideBar.tsx",[],"D:\\JS_study\\calculator-ios\\src\\components\\InputField.tsx",[],"D:\\JS_study\\calculator-ios\\src\\components\\ButtonDouble.tsx",[],"D:\\JS_study\\calculator-ios\\src\\components\\ButtonStandard.tsx",[],"D:\\JS_study\\calculator-ios\\src\\components\\ButtonsArea.tsx",[],"D:\\JS_study\\calculator-ios\\src\\redux\\Store.ts",[],"D:\\JS_study\\calculator-ios\\src\\redux\\InputReducer.ts",["50"],"\r\nimport { ActionInterface, StateInterface } from './../interfaces';\r\n\r\nconst initialState: StateInterface = {\r\n    isLeftOperandSet: false,\r\n    leftOperand: '',\r\n    rightOperand: '',\r\n\r\n    isOperatorPressed: false,\r\n    operator: '',\r\n\r\n    isEqualPressed: false,\r\n    isCommaPressed: false,\r\n\r\n    outputResult: 0,\r\n\r\n    numberInMemory: 0\r\n}\r\n\r\nlet numberInMemory = 0;\r\n\r\nconst inputReducer = (state: StateInterface = Object.assign({}, initialState), action: ActionInterface) => {\r\n\r\n    switch (action.type) {\r\n        case 'digit':\r\n            if (state.isEqualPressed && !state.isOperatorPressed && !state.isCommaPressed) {\r\n                state.leftOperand = '';\r\n                state.isLeftOperandSet = false;\r\n            }\r\n            if (!state.isLeftOperandSet) {\r\n                state.leftOperand += action.button;\r\n                state.outputResult = +state.leftOperand\r\n            } else {\r\n                state.rightOperand += action.button;\r\n                state.outputResult = +state.rightOperand;\r\n            }\r\n            state.isEqualPressed = false;\r\n            state.isOperatorPressed = false;\r\n\r\n            return state;\r\n\r\n        case 'operand':\r\n            if (!state.isOperatorPressed) {\r\n                if (!state.isLeftOperandSet) {\r\n                    state.isLeftOperandSet = true;\r\n                    state.isCommaPressed = false;\r\n                } else {\r\n                    switch (state.operator) {\r\n                        case '+':\r\n                            state.outputResult = Math.round((+state.leftOperand + +state.rightOperand) * 100000) / 100000;\r\n                            state.leftOperand = state.outputResult.toString();\r\n                            state.rightOperand = '';\r\n                            break;\r\n                        case '-':\r\n                            state.outputResult = Math.round((+state.leftOperand - +state.rightOperand) * 100000) / 100000;\r\n                            state.leftOperand = state.outputResult.toString();\r\n                            state.rightOperand = '';\r\n                            break;\r\n                        case 'X':\r\n                            state.outputResult = Math.round((+state.leftOperand * +state.rightOperand) * 100000) / 100000;\r\n                            state.leftOperand = state.outputResult.toString();\r\n                            state.rightOperand = '';\r\n                            break;\r\n                        case '/':\r\n                            state.outputResult = Math.round(+state.leftOperand / +state.rightOperand * 100000) / 100000;\r\n                            state.leftOperand = state.outputResult.toString();\r\n                            state.rightOperand = '';\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            state.operator = action.button;\r\n            state.isOperatorPressed = true;\r\n\r\n            return state;\r\n\r\n        case 'unary':\r\n            switch (action.button) {\r\n                case '=':\r\n                    state.isEqualPressed = true;\r\n                    if (state.operator && state.rightOperand) {\r\n                        switch (state.operator) {\r\n                            case '+':\r\n                                state.outputResult = Math.round((+state.leftOperand + +state.rightOperand) * 100000) / 100000;\r\n                                state.leftOperand = state.outputResult.toString();\r\n                                state.rightOperand = '';\r\n                                break;\r\n                            case '-':\r\n                                state.outputResult = Math.round((+state.leftOperand - +state.rightOperand) * 100000) / 100000;\r\n                                state.leftOperand = state.outputResult.toString();\r\n                                state.rightOperand = '';\r\n                                break;\r\n                            case 'X':\r\n                                state.outputResult = Math.round((+state.leftOperand * +state.rightOperand) * 100000) / 100000;\r\n                                state.leftOperand = state.outputResult.toString();\r\n                                state.rightOperand = '';\r\n                                break;\r\n                            case '/':\r\n                                state.outputResult = Math.round(+state.leftOperand / +state.rightOperand * 100000) / 100000;\r\n                                state.leftOperand = state.outputResult.toString();\r\n                                state.rightOperand = '';\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                    state.operator = '';\r\n                    state.isCommaPressed = false;\r\n                    return state;\r\n\r\n                case '+/-':\r\n                    if (!state.isLeftOperandSet || (!state.rightOperand && state.isLeftOperandSet)) {\r\n                        state.leftOperand = (+state.leftOperand * -1).toString();\r\n                        state.outputResult = +state.leftOperand;\r\n                    } else {\r\n                        state.rightOperand = (+state.rightOperand * -1).toString();\r\n                        state.outputResult = +state.rightOperand;\r\n                    }\r\n\r\n                    return state;\r\n\r\n                case ',':\r\n                    if (state.isEqualPressed) {\r\n                        state.isLeftOperandSet = false;\r\n                        state.leftOperand = '0';\r\n                    }\r\n                    if (!state.isCommaPressed) {\r\n                        if (!state.isLeftOperandSet) {\r\n                            state.leftOperand += '.';\r\n                        } else {\r\n                            state.rightOperand += '.';\r\n                        }\r\n                    }\r\n                    state.isCommaPressed = true;\r\n\r\n                    return state;\r\n\r\n                case 'AC':\r\n                    state = Object.assign({}, initialState);\r\n                    return state;\r\n\r\n                case '%':\r\n                    if (state.isEqualPressed) {\r\n                        state.leftOperand = (+state.leftOperand / 100).toString();\r\n                        state.outputResult = +state.leftOperand;\r\n                    }\r\n                    if (!state.isLeftOperandSet || (state.isLeftOperandSet && state.isOperatorPressed)) {\r\n                        state.leftOperand = (+state.leftOperand / 100).toString();\r\n                        state.isLeftOperandSet = true;\r\n                        state.outputResult = +state.leftOperand;\r\n                        state.isOperatorPressed = false;\r\n                    } else if (!state.isOperatorPressed && !state.isEqualPressed) {\r\n                        state.rightOperand = (+state.rightOperand / 100).toString();\r\n                        state.outputResult = +state.rightOperand;\r\n                    }\r\n                    state.isEqualPressed = false;\r\n\r\n                    return state;\r\n\r\n                default:\r\n                    return state;\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default inputReducer;","D:\\JS_study\\calculator-ios\\src\\redux\\ButtonsReducer.ts",[],"D:\\JS_study\\calculator-ios\\src\\redux\\store.ts",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":20,"column":5,"nodeType":"57","messageId":"58","endLine":20,"endColumn":19},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'numberInMemory' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]